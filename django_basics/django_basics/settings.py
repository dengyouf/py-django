"""
Django settings for django_basics project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z&_8rok8fk@t@qk%oi(j_^y&otn_f3l5l^obm-(%=g8wtg0-gt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cookie_app',
    'session_app',
    'paging_app',
    'captcha_app',
    'middleware_app',
    'logging_app',
    'cache_app',
    'celery_app',
]

MIDDLEWARE = [
    # 必须第一个
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 自定义中间件
    # 'middleware_app.mid.FirstMiddleware',
    # 'middleware_app.mid.SecondMiddleware',
    # 'middleware_app.mid.ThreedMiddleware',
    # 必须最后一个
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'django_basics.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_basics.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATICFILES_DIRS = [
    BASE_DIR / "static",
    '/var/www/static/',
]
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'





# Logging configuration
BASE_LOGS_DIR = os.path.join(BASE_DIR, 'logs')

LOGGING = {
       'version': 1,
       'disable_existing_loggers': False,
       'formatters': {
           # 一般应用文件
           'standard': {
               'format': '[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d:%(funcName)s] %(message)s'
           },
           # 应用于控制台
           'simple':{
               'format':'[%(levelname)s][%(asctime)s] %(message)s'
           }
       },
       'filters': {
           'require_debug_true': {
               '()': 'django.utils.log.RequireDebugTrue',
           },
       },
       'handlers': {
           'console': {
               'level': 'DEBUG',
               'filters': ['require_debug_true'],
               'class': 'logging.StreamHandler',
               'formatter': 'simple'
           },
           'file': {
               'level': 'INFO',
               'class': 'logging.handlers.RotatingFileHandler',
               'filename': os.path.join(BASE_LOGS_DIR, "loggng_app.log"), 
               'maxBytes': 1024 * 1024 * 50,  # 日志大小 50M
               'backupCount': 3, 
               'formatter': 'standard',
               'encoding': 'utf-8',
           },
       },
       'loggers': {
           '': {
               # 部署到生产环境之后可以把'console'移除
               'handlers': ['console', 'file'],
               'level': 'DEBUG',
           },
       },
   }

# Cache settings
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:36379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "redis123",
            "SOCKET_CONNECT_TIMEOUT": 5,  # in seconds
            "SOCKET_TIMEOUT": 5,  # in seconds
             "CONNECTION_POOL_KWARGS": {"max_connections": 100},
             "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor"
        }
    },
    "myapp": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:36379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": "redis123",
            "SOCKET_CONNECT_TIMEOUT": 5,  # in seconds
            "SOCKET_TIMEOUT": 5,  # in seconds
             "CONNECTION_POOL_KWARGS": {"max_connections": 100},
             "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor"
        }
    },
}

# 全站缓存
# DJANGO_REDIS_LOG_IGNORED_EXCEPTIONS  = True
# DJANGO_REDIS_LOGGER = 'some.specified.logger'
CACHE_MIDDLEWARE_ALIAS='default'
CACHE_MIDDLEWARE_SECONDS=3600
CACHE_MIDDLEWARE_KEY_PREFIX='django_cache'

# Session redis cache
SESSION_ENGINE ='django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'
SESSION_COOKIE_AGE = 24*3600

# Celery settings
# Broker配置，使用Redis作为消息中间件
BROKER_URL = 'redis://:redis123@127.0.0.1:36379/2' 
# BACKEND配置，这里使用redis
CELERY_RESULT_BACKEND = 'redis://:redis123@127.0.0.1:36379/3' 
# 结果序列化方案
CELERY_RESULT_SERIALIZER = 'json' 
# 任务结果过期时间，秒
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24 
# 时区配置
CELERY_TIMEZONE='Asia/Shanghai'   